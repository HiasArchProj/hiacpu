package org.chipsalliance.hia

import chisel3._
import chisel3.util._

object Instructions {
  /*  ------------RV32I------------ */
  // FIXM remove " " in BitPat
  val LUI = BitPat("b??????? ????? ????? ??? ????? 01101 11")
  val AUIPC = BitPat("b??????? ????? ????? ??? ????? 00101 11")
  val JAL = BitPat("b??????? ????? ????? ??? ????? 11011 11")
  val JALR = BitPat("b??????? ????? ????? 000 ????? 11001 11")
  val BEQ = BitPat("b??????? ????? ????? 000 ????? 11000 11")
  val BNE = BitPat("b??????? ????? ????? 001 ????? 11000 11")
  val BLT = BitPat("b??????? ????? ????? 100 ????? 11000 11")
  val BGE = BitPat("b??????? ????? ????? 101 ????? 11000 11")
  val BLTU = BitPat("b??????? ????? ????? 110 ????? 11000 11")
  val BGEU = BitPat("b??????? ????? ????? 111 ????? 11000 11")
  val LB = BitPat("b??????? ????? ????? 000 ????? 00000 11")
  val LH = BitPat("b??????? ????? ????? 001 ????? 00000 11")
  val LW = BitPat("b??????? ????? ????? 010 ????? 00000 11")
  val LBU = BitPat("b??????? ????? ????? 100 ????? 00000 11")
  val LHU = BitPat("b??????? ????? ????? 101 ????? 00000 11")
  val SB = BitPat("b??????? ????? ????? 000 ????? 01000 11")
  val SH = BitPat("b??????? ????? ????? 001 ????? 01000 11")
  val SW = BitPat("b??????? ????? ????? 010 ????? 01000 11")
  val ADDI = BitPat("b??????? ????? ????? 000 ????? 00100 11")
  val SLTI = BitPat("b??????? ????? ????? 010 ????? 00100 11")
  val SLTIU = BitPat("b??????? ????? ????? 011 ????? 00100 11")
  val XORI = BitPat("b??????? ????? ????? 100 ????? 00100 11")
  val ORI = BitPat("b??????? ????? ????? 110 ????? 00100 11")
  val ANDI = BitPat("b??????? ????? ????? 111 ????? 00100 11")
  val SLLI = BitPat("b000000? ????? ????? 001 ????? 00100 11")
  val SRLI = BitPat("b000000? ????? ????? 101 ????? 00100 11")
  val SRAI = BitPat("b010000? ????? ????? 101 ????? 00100 11")
  val ADD = BitPat("b0000000 ????? ????? 000 ????? 01100 11")
  val SUB = BitPat("b0100000 ????? ????? 000 ????? 01100 11")
  val SLL = BitPat("b0000000 ????? ????? 001 ????? 01100 11")
  val SLT = BitPat("b0000000 ????? ????? 010 ????? 01100 11")
  val SLTU = BitPat("b0000000 ????? ????? 011 ????? 01100 11")
  val XOR = BitPat("b0000000 ????? ????? 100 ????? 01100 11")
  val SRL = BitPat("b0000000 ????? ????? 101 ????? 01100 11")
  val SRA = BitPat("b0100000 ????? ????? 101 ????? 01100 11")
  val OR = BitPat("b0000000 ????? ????? 110 ????? 01100 11")
  val AND = BitPat("b0000000 ????? ????? 111 ????? 01100 11")
  val FENCE = BitPat("b0000??? ????? 00000 000 00000 00011 11")
  val FENCEI = BitPat("b0000000 00000 00000 001 00000 00011 11")
  val ECALL = BitPat("b0000000 00000 00000 000 00000 11100 11")
  val EBREAK = BitPat("b0000000 00001 00000 000 00000 11100 11") // R(10) is $a0
  val CSRRW = BitPat("b??????? ????? ????? 001 ????? 11100 11")
  val CSRRS = BitPat("b??????? ????? ????? 010 ????? 11100 11")
  val CSRRC = BitPat("b??????? ????? ????? 011 ????? 11100 11")
  val CSRRWI = BitPat("b??????? ????? ????? 101 ????? 11100 11")
  val CSRRSI = BitPat("b??????? ????? ????? 110 ????? 11100 11")
  val CSRRCI = BitPat("b??????? ????? ????? 111 ????? 11100 11")

  /*  ------------RV32M------------ */

}
